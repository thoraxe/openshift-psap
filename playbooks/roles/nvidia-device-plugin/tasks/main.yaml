---
- name: check for nvidia project
  command: oc get project nvidia-device-plugin
  ignore_errors: true
  register: nvidia_project_status

- name: create nvidia project when it didn't already exist
  command: oc adm new-project nvidia-device-plugin
  when: nvidia_project_status is failed

- name: check if nodeselector is present
  command: oc get project nvidia-device-plugin -o yaml
  register: nvidia_project_yaml

- name: patch nvidia project to set empty nodeselector
  command: oc patch namespace nvidia-device-plugin -p '{"metadata":{"annotations":{"openshift.io/node-selector":""}}}'
  when: "'openshift.io/node-selector: \"\"' not in nvidia_project_yaml.stdout"

- name: check for nvidia device plugin service account in kube-system project
  command: oc get serviceaccount nvidia-deviceplugin -n kube-system
  register: deviceplugin_out
  ignore_errors: true

- name: create serviceaccount for nvidia deviceplugin in kube-system project
  command: oc create serviceaccount -n kube-system nvidia-deviceplugin
  when: deviceplugin_out is failed

- name: check for nvidia device plugin service account in nvidia-device-plugin project
  command: oc get serviceaccount nvidia-deviceplugin -n nvidia-device-plugin
  register: deviceplugin_out
  ignore_errors: true

- name: create serviceaccount for nvidia deviceplugin in kube-system project
  command: oc create serviceaccount -n nvidia-device-plugin nvidia-deviceplugin
  when: deviceplugin_out is failed

- name: copy device plugin scc yaml to host
  copy:
    src: nvidia-device-plugin-scc.yaml
    dest: /tmp/nvidia-device-plugin-scc.yaml

- name: check for nvidia device plugin scc
  command: oc get scc nvidia-deviceplugin
  register: deviceplugin_scc_out
  ignore_errors: true

- name: load nvidia device plugin scc
  command: oc create -f /tmp/nvidia-device-plugin-scc.yaml 
  when: deviceplugin_scc_out is failed

# need to supply an env var called 'gpu_hosts' that refers to the group of hosts/nodes where we should apply the gpu label
- name: label fast_nodes with nvidia gpu=true
  command: oc label node {{ hostvars[item].inventory_hostname }} openshift.com/gpu-accelerator=true --overwrite
  with_items: '{{ groups[gpu_hosts] }}'

- name: copy device plugin daemonset definition to host
  copy:
    src: nvidia-device-plugin-daemonset.yaml
    dest: /tmp/nvidia-device-plugin-daemonset.yaml

- name: check for nvidia device plugin daemonset
  command: oc get daemonset -n kube-system nvidia-deviceplugin-daemonset
  register: daemonset_out
  ignore_errors: true

- name: install the NVIDIA kubernetes device-plugin (CentOS base image)
  command: oc create -f /tmp/nvidia-device-plugin-daemonset.yaml -n kube-system
  when: daemonset_out is failed
